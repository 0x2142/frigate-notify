## SAMPLE CONFIG FILE
# For more info, see docs at https://frigate-notify.0x2142.com/config/

## Event Collection Methods
# Note: Only enable one - webapi OR mqtt
frigate:
  # Frigate host URL (ex. https://frigate.yourdomain.local)
  # This is required for both collection methods
  server: 
  # Set to true if using SSL & a self-signed certificate
  ignoressl: false

  webapi:
    # Set to true to enable event collection via the web API
    enabled: 
    # Interval between checking for new events, in seconds (Default: 30)
    interval: 
    
  mqtt: 
    # Set to true to enable event collection via MQTT
    enabled: 
    # MQTT host IP
    server: 
    # MQTT host port. (Default: 1883)
    port:
    # MQTT Client ID (Default: frigate-notify)
    clientid:
    # MQTT Authentication. Leave both blank for anonymous
    username: 
    password: 
  
  cameras:
    # List of cameras to exclude from being monitored
    # Camera names must match frigate configuration
    exclude:
      - test_cam_01


## Alerting methods
# Any combination of alert destinations can be configured
alerts:  
  # General config applies to all alert methods below
  general:
    # Title for any alert messages (Default: Frigate Alert)
    title:

  zones:
    # Allow notifications for events outside a zone
    # Set to `drop` to disallow this
    unzoned: allow
    # List of valid zones to generate alerts
    # If blank, all events with a zone will generate notifications
    allow:
     - test_zone_01
    # List of zones to never generate notifications
    block:
     - test_zone_02

  discord:
    # Set to true to enable alerting via Discord messages
    enabled: false
    # Insert full webhook URL below
    webhook: 
  
  gotify:
    # Set to true to enable alerting via a Gotify push notification server
    enabled: false
    # Server URL (ex. https://push.yourdomain.local)
    server:
    # Application token generated by Gotify
    token: 
    # Set to true if using SSL & a self-signed certificate
    ignoressl:
  
  smtp:
    # Set to true to enable alerting via SMTP
    enabled: false
    # SMTP server host (ex. smtp.gmail.com)
    server: 
    # SMTP port
    port: 
    # Whether or not the SMTP server requires TLS (Default: true)
    tls: 
    # Sending address / username
    user:
    # SMTP password for above user
    password:
    # Email alerts sent to any addresses listed below, separated by comma
    recipient:

  # Telegram Config
  telegram:
    # Set to true to enable alerting via Telegram
    enabled: false
    # Chat ID of alert recipient
    chatid:
    # Bot API token
    token:

  # Pushover Config
  pushover:
    # Set to true to enable alerting via Pushover
    enabled: false
    # Pushover API token for this application
    token:
    # User or Group key for recipients
    userkey:
    # Optional list of target devices by name, separated by comma
    devices:
    # Optional message priority, default is 0
    priority:
    # If priority is 2, retry & expiration must be set
    # Values in seconds. Retry must be 30 or higher
    retry:
    expire:
    # Optional message lifetime
    ttl:


## App Monitoring
# Sends HTTP GET to provided URL for aliveness checks
monitor:
  # Set to true to enable app monitoring
  enabled: false
  # URL for monitoring server
  url: 
  # Interval between monitoring check-in events, in seconds
  interval: 
  # Set to true if using SSL & a self-signed certificate
  ignoressl: 