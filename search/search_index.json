{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Docs for Frigate-Notify","text":"<p>Hi there, you've found the documentation site for 0x2142/frigate-notify. Thanks for your interest in the project! </p> <p>If you get value out of this tool, please let me know by leaving a star:  </p>"},{"location":"#about-the-project","title":"About the Project","text":"<p>This project is designed to generate notifications based on events from a standalone instance of Frigate NVR.</p> <p>Currently Frigate only supports notifications through Home Assistant, which I'm not using at the moment. So I set out to build a simple notification app that would work with a standalone Frigate server.</p>"},{"location":"#features","title":"Features","text":"<p>Event Polling</p> <ul> <li>MQTT</li> <li>Direct via Frigate API</li> </ul> <p>Notification Methods</p> <ul> <li>Discord</li> <li>Gotify</li> <li>SMTP</li> <li>Telegram</li> <li>Pushover</li> <li>Nfty</li> </ul> <p>Other</p> <ul> <li>Aliveness monitor via HTTP GET (for use with tools like HealthChecks or Uptime Kuma)</li> </ul> <p>Tip</p> <p>If you use this code &amp; have any specific feature requests - please feel free to open an issue with the details of what you would like to see added!</p> <p>While this is a hobby project for me, I'll do my best to respond &amp; update the code for anything reasonable.</p> <p>Thanks again for being here! \ud83d\ude0a</p> <p></p> <p></p>"},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#v028-may-15-2024","title":"v0.2.8 - May 15 2024","text":"<ul> <li>Add support for notifications via Nfty</li> <li>Add ability to send additional HTTP headers to Frigate</li> <li>Add new <code>public_url</code> config item for Frigate<ul> <li>This will be used in notification links &amp; should be configured if Frigate is accessible via the internet</li> </ul> </li> <li>Add startup check to verify Frigate API is accessible</li> <li>Rework event notifications to be built from templates</li> <li>Fix default interval for querying evens via web API</li> <li>Fix issue where label score is 0% via web API event query</li> </ul>"},{"location":"changelog/#v027-may-06-2024","title":"v0.2.7 - May 06 2024","text":"<ul> <li>Allow changing default MQTT topic prefix via config</li> <li>Added ability to filter notifications based on labels<ul> <li>New option to allow only notifications with specified labels</li> <li>New option to deny notifications based on labels</li> </ul> </li> </ul>"},{"location":"changelog/#v026-apr-01-2024","title":"v0.2.6 - Apr 01 2024","text":"<ul> <li>Fixed issue with setting <code>unzoned: drop</code> under zone config, where alerts wouldn't be sent if event began outside a zone.</li> <li>Fixed issue with correct timezone getting applied on container image</li> <li>Added <code>timeformat</code> option for notifications, which allows custom date/time format</li> <li>Minor updates to logging to ensure all event logs have an event ID attached</li> </ul>"},{"location":"changelog/#v025-mar-29-2024","title":"v0.2.5 - Mar 29 2024","text":"<ul> <li>Added support for alerts via Pushover</li> <li>Reduced container image from ~1Gb to ~11Mb</li> </ul>"},{"location":"changelog/#v024-mar-28-2024","title":"v0.2.4 - Mar 28 2024","text":"<ul> <li>Added support for alerts via Telegram</li> <li>Updated notification message to now include links to the camera &amp; event clip</li> </ul>"},{"location":"changelog/#v023-mar-14-2024","title":"v0.2.3 - Mar 14 2024","text":"<ul> <li>Updated config management</li> <li>Improved config file validation</li> <li>Fixed issue where HTTP requests would fail if only IP &amp; port were specified in config</li> <li>Fixed crash if Frigate has no event info &amp; app couldn't pull snapshots</li> <li>Added ability to filter notifications based on zones<ul> <li>New config option to only allow notifications based on zone</li> <li>New config option to deny notifications based on zone</li> <li>New config option to allow or drop events outside of a designated zone</li> </ul> </li> </ul>"},{"location":"changelog/#v022-nov-29-2023","title":"v0.2.2 - Nov 29 2023","text":"<ul> <li>Fix SMTP issue where code was ignoring <code>tls: false</code> config flag</li> <li>Fix issue where snapshots would only be sent to the first alerting method, if multiple were enabled</li> <li>Update Debian image used for Docker image</li> </ul>"},{"location":"changelog/#v021-sep-20-2023","title":"v0.2.1 - Sep 20 2023","text":"<ul> <li>Added Docker release build for ARM</li> </ul>"},{"location":"changelog/#v020-sep-19-2023","title":"v0.2.0 - Sep 19 2023","text":"<ul> <li>Add support for excluding cameras from alerts</li> <li>Added ability to set custom alert titles</li> <li>Added ability to set custom MQTT client ID</li> <li>Added ability to change MQTT port</li> <li>Migrate Discord alerts to use Embeds</li> <li>Improved SMTP &amp; Gotify alerts to include a warning if a snapshot wasn't saved</li> <li>Add GitHub actions for automated release builds</li> <li>Added version number to startup logging</li> </ul>"},{"location":"changelog/#v011-apr-25-2023","title":"v0.1.1 - Apr 25 2023","text":"<ul> <li>Add support for MQTT authentication</li> </ul>"},{"location":"changelog/#v010-mar-17-2023","title":"v0.1.0 - Mar 17 2023","text":"<ul> <li>Initial release! \ud83c\udf89</li> </ul>"},{"location":"config/","title":"Config","text":"<p>This section will walk through the available configuration items.</p> <p>Configuration snippets will be provided throughout this page. Feel free to copy the full Sample Config at the bottom of this page to customize.</p>"},{"location":"config/#frigate","title":"Frigate","text":""},{"location":"config/#server","title":"Server","text":"<ul> <li>server (Required)<ul> <li>IP, hostname, or URL of the Frigate NVR</li> <li>If IP or hostname specified, app will prepend <code>http://</code></li> <li>If Frigate is not behind a reverse proxy, append port number if necessary</li> </ul> </li> <li>ignoressl (Optional - Default: <code>false</code>)<ul> <li>Set to <code>true</code> to allow self-signed certificates for <code>server</code></li> </ul> </li> <li>public_url (Optional)<ul> <li>Should be set if Frigate is available via an external, public URL</li> <li>This value is used for the links used in notifications</li> <li>Format should be full URL (example: <code>https://nvr.your.public.domain.tld</code>)</li> </ul> </li> <li>headers (Optional)<ul> <li>Send additional HTTP headers to Frigate</li> <li>Useful for things like authentication</li> <li>Header format: <code>Header: Value</code></li> <li>Example: <code>Authorization: Basic abcd1234</code></li> </ul> </li> </ul> Config File Snippet<pre><code>frigate:\n  server: nvr.your.domain.tld\n  ignoressl: true\n  public_url: https://nvr.your.public.domain.tld\n  headers:\n    - Authorization: Basic abcd1234\n</code></pre>"},{"location":"config/#webapi","title":"WebAPI","text":"<p>Note</p> <p>Only one monitoring method can be configured, either <code>webapi</code> or <code>mqtt</code>. The other must be set to <code>enabled: false</code>.</p> <ul> <li>enabled (Optional - Default: <code>false</code>)<ul> <li>If set to <code>true</code>, Frigate events are collected by polling the web API</li> </ul> </li> <li>interval (Optional - Default: <code>30</code>)<ul> <li>How frequently to check the Frigate web API for new events, in seconds</li> </ul> </li> </ul> Config File Snippet<pre><code>frigate:\n  webapi:\n    enabled: true\n    interval: 60\n</code></pre>"},{"location":"config/#mqtt","title":"MQTT","text":"<p>Note</p> <p>Only one monitoring method can be configured, either <code>webapi</code> or <code>mqtt</code>. The other must be set to <code>enabled: false</code>.</p> <ul> <li>enabled (Optional - Default: <code>false</code>)<ul> <li>If set to <code>true</code>, Frigate events are collected via an MQTT broker</li> <li>Note: This must be the same MQTT broker that Frigate is sending events to</li> </ul> </li> <li>server (Required)<ul> <li>IP or hostname of the MQTT server</li> <li>If MQTT monitoring is enabled, this field is required</li> </ul> </li> <li>port (Optiona - Default: <code>1883</code>)<ul> <li>MQTT service port</li> </ul> </li> <li>clientid (Optional - Default: <code>frigate-notify</code>)<ul> <li>Client ID of this app used when connecting to MQTT</li> <li>Note: This must be a unique value &amp; cannot be shared with other MQTT clients</li> </ul> </li> <li>username (Optional)<ul> <li>MQTT username</li> <li>If username &amp; password are not set, then authentication is disabled</li> </ul> </li> <li>password (Optional)<ul> <li>MQTT password</li> <li>Required if <code>username</code> is set</li> </ul> </li> <li>topic_prefix (Optional - Default: <code>frigate</code>)<ul> <li>Optionally change MQTT topic prefix</li> <li>This should match the topic prefix used by Frigate</li> </ul> </li> </ul> Config File Snippet<pre><code>frigate:\n  mqtt: \n    enabled: true\n    server: mqtt.your.domain.tld\n    port: 1883\n    clientid: frigate-notify\n    username: mqtt-user\n    password: mqtt-pass\n    topic_prefix: frigate\n</code></pre>"},{"location":"config/#cameras","title":"Cameras","text":"<ul> <li>exclude (Optional)<ul> <li>If desired, provide a list of cameras to ignore</li> <li>Any Frigate events on these cameras will not generate alerts</li> <li>If left empty, this is disabled &amp; all cameras will generate alerts</li> </ul> </li> </ul> Config File Snippet<pre><code>frigate:\n  cameras:\n    exclude:\n      - test_cam_01\n      - test_cam_02\n</code></pre>"},{"location":"config/#alerting","title":"Alerting","text":"<p>Note</p> <p>Any combination of alerting methods may be enabled, though you'll probably want to enable at least one! \ud83d\ude05</p>"},{"location":"config/#general","title":"General","text":"<ul> <li>title (Optional - Default: <code>Frigate Alert</code>)<ul> <li>Title of alert messages that are generated (Email subject, etc)</li> </ul> </li> <li>timeformat (Optional - Default: <code>2006-01-02 15:04:05 -0700 MST</code>)<ul> <li>Optionally set a custom date/time format for notifications</li> <li>This utilizes Golang's reference time for formatting</li> <li>See this guide for help</li> <li>Example below uses RFC1123 format</li> </ul> </li> </ul> Config File Snippet<pre><code>alerts:  \n  general:\n    title: Frigate Alert\n    timeformat: Mon, 02 Jan 2006 15:04:05 MST\n</code></pre>"},{"location":"config/#zones","title":"Zones","text":"<p>This config section allows control over whether to generate alerts on all zones, or only specific ones. By default, the app will generate notifications on all Frigate events, regardless of whether the event includes zone info.</p> A note about how this works <p>With MQTT, Frigate will send a <code>new</code> event when a detection starts. Subsequent changes, like the detected object transitioning from one zone to another, will trigger <code>update</code> events. These <code>update</code> events will contain a list of current zone(s) that the object is in, as well as a list of all zones that the object has entered during the event.</p> <p>In order to reduce the number of notifications generated, this app will only alert on the first time the detected object enters a zone.</p> <p>For example, let's say you have a camera in your front yard with zones for sidewalk, driveway, and lawn - but only allow notifications for driveway and lawn. During an event someone was detected originally on the sidewalk, then driveway, lawn, and back to driveway. In this case, you should only receive two notifications. Once for the first time the person entered the driveway zone, and a second when they entered the lawn zone. </p> <p>With Web API event query, we only query the event from Frigate one time. So currently, only one alert would be sent depending on the detected zones at the time the web API was queried for new events.</p> <ul> <li>unzoned (Optional - Default: <code>allow</code>)<ul> <li>Controls alerts on events outside a zone</li> <li>By default, events without a zone will generate alerts</li> <li>Set to <code>drop</code> to prevent generating alerts from events without a zone</li> </ul> </li> <li>allow (Optional)<ul> <li>Specify a list of zones to allow notifications</li> <li>All other zones will be ignored</li> <li>If <code>unzoned</code> is set to <code>allow</code>, notifications will still be sent on events without any zone info</li> </ul> </li> <li>block (Optional)<ul> <li>Specify a list of zones to always ignore</li> <li>This takes precedence over the <code>allow</code> list</li> </ul> </li> </ul> Config File Snippet<pre><code>alerts:\n  zones:\n    unzoned: allow\n    allow:\n     - test_zone_01\n    block:\n     - test_zone_02\n</code></pre>"},{"location":"config/#labels","title":"Labels","text":"<p>Similar to zones, notifications can be filtered based on labels. By default, the app will generate notifications regardless of any labels received from Frigate. Using this config section, certain labels can be blocked from sending notifications - or an allowlist can be provided to only generate alerts from specified labels.</p> <ul> <li>allow (Optional)<ul> <li>Specify a list of labels to allow notifications</li> <li>If set, all other labels will be ignored</li> <li>If not set, all labels will generate notifications</li> </ul> </li> <li>block (Optional)<ul> <li>Specify a list of labels to always ignore</li> <li>This takes precedence over the <code>allow</code> list</li> </ul> </li> </ul> Config File Snippet<pre><code>alerts:\n  labels:\n    allow:\n     - person\n     - dog\n    block:\n     - bird\n</code></pre>"},{"location":"config/#discord","title":"Discord","text":"<ul> <li>enabled (Optional - Default: <code>false</code>)<ul> <li>Set to <code>true</code> to enable alerting via Discord webhooks</li> </ul> </li> <li>webhook (Required)<ul> <li>Full URL of the desired Discord webhook to send alerts through</li> <li>Required if this alerting method is enabled</li> <li>Check Discord's docs for how to create a webhook</li> </ul> </li> </ul> Config File Snippet<pre><code>alerts:  \n  discord:\n    enabled: false\n    webhook: https://&lt;your-discord-webhook-here&gt;\n</code></pre>"},{"location":"config/#gotify","title":"Gotify","text":"<ul> <li>enabled (Optional - Default: <code>false</code>)<ul> <li>Set to <code>true</code> to enable alerting via Gotify</li> </ul> </li> <li>server (Required)<ul> <li>IP or hostname of the target Gotify server</li> <li>Required if this alerting method is enabled</li> </ul> </li> <li>token (Required)<ul> <li>App token associated with this app in Gotify</li> <li>Required if this alerting method is enabled</li> </ul> </li> <li>ignoressl (Optional - Default: <code>false</code>)<ul> <li>Set to <code>true</code> to allow self-signed certificates</li> </ul> </li> </ul> Config File Snippet<pre><code>alerts:  \n  gotify:\n    enabled: false\n    server: gotify.your.domain.tld\n    token: ABCDEF\n    ignoressl: true\n</code></pre>"},{"location":"config/#smtp","title":"SMTP","text":"<ul> <li>enabled (Optional - Default: <code>false</code>)<ul> <li>Set to <code>true</code> to enable alerting via SMTP</li> </ul> </li> <li>server (Required)<ul> <li>IP or hostname of the target SMTP server</li> <li>Required if this alerting method is enabled</li> </ul> </li> <li>port (Required)<ul> <li>Port of the target SMTP server</li> <li>Required if this alerting method is enabled</li> </ul> </li> <li>tls (Optional - Default: <code>false</code>)<ul> <li>Set to <code>true</code> if SMTP TLS is required</li> </ul> </li> <li>user (Optional)<ul> <li>Add SMTP username for authentication</li> <li>If username &amp; password are not set, then authentication is disabled</li> </ul> </li> <li>password (Optional)<ul> <li>Password of SMTP user</li> <li>Required if <code>user</code> is set</li> </ul> </li> <li>recipient (Required)<ul> <li>Comma-separated list of email recipients</li> <li>Required if this alerting method is enabled</li> </ul> </li> </ul> Config File Snippet<pre><code>alerts:  \n  smtp:\n    enabled: false\n    server: smtp.your.domain.tld\n    port: 587\n    tls: true\n    user: test_user@your.domain.tld\n    password: test_pass\n    recipient: nvr_group@your.domain.tld, someone_else@your.domain.tld\n</code></pre>"},{"location":"config/#telegram","title":"Telegram","text":"<p>In order to use Telegram for alerts, a bot token &amp; chat ID are required.</p> <p>To obtain a bot token, follow this doc to message @BotFather.</p> <p>Once you have a bot token, make sure to initiate a chat message with your bot. Then visit the following URL:</p> <ul> <li><code>https://api.telegram.org/bot&lt;BOT_TOKEN&gt;/getUpdates</code> </li> <li>Replace <code>&lt;BOT_TOKEN&gt;</code> with the API token provided by @BotFather. </li> </ul> <p>Within the response, locate your message to the bot, then grab the ID under <code>message &gt; chat &gt; id</code>. An example response is shown below, where <code>999999999</code> is the ID we need to save:</p> <pre><code>{\n  \"update_id\": 1234567,\n  \"message\": {\n    \"chat\": {\n      \"id\": 999999999,\n      \"first_name\": \"Test User\",\n      \"username\": \"test-username1234\",\n      \"type\": \"private\"\n    }\n  }\n}\n</code></pre> <ul> <li>enabled (Optional - Default: <code>false</code>)<ul> <li>Set to <code>true</code> to enable alerting via Telegram</li> </ul> </li> <li>chatid (Required)<ul> <li>Chat ID for the alert recipient</li> <li>Required if this alerting method is enabled</li> </ul> </li> <li>token (Required)<ul> <li>Bot token generated from @BotFather</li> <li>Required if this alerting method is enabled</li> </ul> </li> </ul> Config File Snippet<pre><code>alerts:  \n  telegram:\n    enabled: true\n    chatid: 123456789\n    token: 987654321:ABCDEFGHIJKLMNOP\n</code></pre>"},{"location":"config/#pushover","title":"Pushover","text":"<ul> <li>enabled (Optional - Default: <code>false</code>)<ul> <li>Set to <code>true</code> to enable alerting via Pushover</li> </ul> </li> <li>token (Required)<ul> <li>Pushover application API token</li> <li>Required if this alerting method is enabled</li> </ul> </li> <li>userkey (Required)<ul> <li>Recipient user or group key from Pushover dashboard</li> <li>Required if this alerting method is enabled</li> </ul> </li> <li>devices (Optional)<ul> <li>Optionally specify list of devices to send notifications to</li> <li>If left empty, all devices will receive the notification</li> </ul> </li> <li>priority (Optional)<ul> <li>Optionally set message priority</li> <li>Valid priorities are -2, -1, 0, 1, 2</li> </ul> </li> <li>retry (Optional)<ul> <li>Message retry in seconds until message is acknowledged</li> <li>If <code>priority</code> is set to 2, this is required</li> <li>Minimum value is 30 seconds</li> </ul> </li> <li>expire (Optional)<ul> <li>Expiration timer for message retry</li> <li>If <code>priority</code> is set to 2, this is required</li> </ul> </li> <li>ttl (Optional)<ul> <li>Optionally set lifetime of message, in seconds</li> <li>If set, message notifications are deleted from devices after this time</li> </ul> </li> </ul> Config File Snippet<pre><code>  pushover:\n    enabled: true\n    token: aaaaaaaaaaaaaaaaaaaaaa\n    userkey: bbbbbbbbbbbbbbbbbbbbbb\n    devices: device1,device2\n    priority: 0\n    retry:\n    expire:\n    ttl:\n</code></pre>"},{"location":"config/#nfty","title":"Nfty","text":"<ul> <li>enabled (Optional - Default: <code>false</code>)<ul> <li>Set to <code>true</code> to enable alerting via Nfty</li> </ul> </li> <li>server (Required)<ul> <li>Full URL of the desired Nfty server</li> <li>Required if this alerting method is enabled</li> </ul> </li> <li>topic (Required)<ul> <li>Destination topic that will receive alert notifications</li> <li>Required if this alerting method is enabled</li> </ul> </li> <li>ignoressl (Optional - Default: <code>false</code>)<ul> <li>Set to <code>true</code> to allow self-signed certificates</li> </ul> </li> </ul> Config File Snippet<pre><code>alerts: \n  nfty:\n    enabled: true\n    server: https://nfty.your.domain.tld\n    topic: frigate\n    ignoressl: true\n</code></pre>"},{"location":"config/#monitor","title":"Monitor","text":"<p>If enabled, this application will check in with tools like HealthChecks or Uptime Kuma on a regular interval for health / status monitoring.</p> <ul> <li>enabled (Optional - Default: <code>false</code>)<ul> <li>Set to <code>true</code> to enable health checks</li> </ul> </li> <li>url (Required)<ul> <li>URL path for health check service</li> <li>Required if monitoring is enabled</li> </ul> </li> <li>interval (Required - Default: <code>60</code>)<ul> <li>Frequency of check-in events</li> <li>Required if monitoring is enabled</li> </ul> </li> <li>ignoressl (Optional - Default: <code>false</code>)<ul> <li>Set to <code>true</code> to allow self-signed certificates</li> </ul> </li> </ul> Config File Snippet<pre><code>monitor:\n  enabled: false\n  url: \n  interval: \n  ignoressl: \n</code></pre>"},{"location":"install/","title":"Install / Setup","text":"<p>Both methods below will require a configuration file to be provided. A configuration template can be found here</p>"},{"location":"install/#docker-recommended","title":"Docker (Recommended)","text":"<p>A Docker image is built with every release. Those images can be found here.</p> <p>The app can be run as a container with the bundled docker-compose.yml file:</p> <pre><code>version: \"3.0\"\nservices:\n  frigate-notify:\n    image: ghcr.io/0x2142/frigate-notify:latest\n    environment:\n      - TZ=Etc/UTC\n    volumes:\n      - /path/to/config.yml:/app/config.yml\n    restart: unless-stopped\n</code></pre> <p>Update <code>volumes</code> in the compose file to the location of the <code>config.yml</code> file. By default the app will check the <code>/app/config</code> directory for this file.</p> <p>The file name &amp; path can also be modified by specifying a path via the <code>FN_CONFIGFILE</code> environment variable:</p> <pre><code>version: \"3.0\"\nservices:\n  frigate-notify:\n    image: ghcr.io/0x2142/frigate-notify:latest\n    environment:\n      FN_CONFIGFILE: /app/config/config.yml\n      TZ: Etc/UTC\n    volumes:\n      - /path/to/config_directory:/app/config\n    restart: unless-stopped\n</code></pre> <p>Optionally, you can run without compose:</p> <pre><code>docker run -v /path/to/config.yml:/app/config.yml ghcr.io/0x2142/frigate-notify:latest\n</code></pre>"},{"location":"install/#local","title":"Local","text":"<p>Binary executables are provided with every release.</p> <p>Download the latest version &amp; run with:</p> <pre><code>./frigate-notify\n</code></pre> <p>By default, the app will look for a config file in the same directory named <code>config.yml</code>.</p> <p>You can manually specify a config file name or location with the <code>-c</code> flag:</p> <pre><code>./frigate-notify -c &lt;new-config-file-location&gt;\n</code></pre>"}]}